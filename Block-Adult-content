<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Warning</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f8d7da;
            color: #721c24;
            text-align: center;
        }
    </style>
</head>
<body>
    <div>
        <h1>Warning!</h1>
        <p>This site contains adult content.</p>
        <p id="customMessage"></p>
        <button onclick="goBack()">Go Back</button>
    </div>
    
    <script>
        // Fetch and display the custom message
        const customMessage = localStorage.getItem('customMessage') || "Please refrain from accessing adult content!";
        document.getElementById('customMessage').textContent = customMessage;

        function goBack() {
            window.history.back();
        }
    </script>
</body>
</html>
 // Add this to a separate HTML page or include it in the existing page's script block
function setCustomMessage() {
    const message = prompt("Enter your custom warning message:");
    if (message) {
        localStorage.setItem('customMessage', message);
        alert("Custom message saved!");
    }
}const express = require('express');
const path = require('path');

const app = express();
const PORT = 3000;

app.use(express.static('public'));

app.get('/warning', (req, res) => {
    res.sendFile(path.join(__dirname, 'public', 'warning.html'));
});

app.listen(PORT, () => {
    console.log(`Server is running at http://localhost:${PORT}`);
});
manifest.json - Describes your extension and its settings.
background.js - (optional) A background script that can handle events.
content.js - (optional) A script that interacts with web pages.
popup.html - (optional) The HTML for your extension's popup.
{
  "manifest_version": 3,
  "name": "My First Extension",
  "version": "1.0",
  "description": "A simple browser extension example.",
  "permissions": ["activeTab"],
  "action": {
    "default_popup": "popup.html",
    "default_icon": {
      "16": "icon-16.png",
      "48": "icon-48.png",
      "128": "icon-128.png"
    }
  },
  "background": {
    "service_worker": "background.js"
  },
  "icons": {
    "16": "icon-16.png",
    "48": "icon-48.png",
    "128": "icon-128.png"
  }
}<!DOCTYPE html>
<html>
<head>
    <title>My Extension</title>
    <style>
        body {
            min-width: 200px;
            min-height: 100px;
            margin: 0;
            padding: 10px;
            font-family: Arial, sans-serif;
        }
        button {
            padding: 5px;
        }
    </style>
</head>
<body>
    <h1>My Extension</h1>
    <button id="myButton">Click me!</button>
    <script src="popup.js"></script>
</body>
</html>document.getElementById('myButton').addEventListener('click', () => {
    alert('Button was clicked!');
});
 

Step 5: (Optional) Background Script

You can add functionality that runs in the background. Here's a simple example for  background.js :

 
chrome.runtime.onInstalled.addListener(() => {
    console.log('Extension installed!');
});
 

Step 6: Icons

Make sure to include icons in your folder ( icon-16.png ,  icon-48.png , and  icon-128.png ). These can be simple PNG images representing your extension.

Step 7: Load Your Extension

Open Chrome and go to Extensions (chrome://extensions/).
Enable Developer mode (toggle in the corner).
Click Load unpacked and select the folder where your extension is located.chrome.runtime.onInstalled.addListener(() => {
    console.log('Extension installed!');
});Make sure to include icons in your folder ( icon-16.png ,  icon-48.png , and  icon-128.png ). These can be simple PNG images representing your extension.
Open Chrome and go to Extensions (chrome://extensions/).
Enable Developer mode (toggle in the corner).
Click Load unpacked and select the folder where your extension is located.
Click on the extension icon in the toolbar, and the popup should appear. Click the button, and you should see an alert!
